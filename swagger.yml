openapi: 3.0.1
info:
  description: "API gateway for Customer App"
  version: "2021-04-14T17:00:39Z"
  title: "auth-service-gateway"
paths:
  /v1/dreamers:
    post:
      operationId: apileadspost
      responses: { }
      x-amazon-apigateway-integration:
        connectionId: "${vpc-id}"
        connectionType: "VPC_LINK"
        httpMethod: "POST"
        uri: "http://${url}/dreamers"
        passthroughBehavior: "when_no_match"
        timeoutInMillis: 29000
        type: "http_proxy"
  /v1/dreamers/{id}/kyc:
    post:
      operationId: apileadskycpost
      responses: { }
      parameters:
        - name: "id"
          in: "path"
          required: true
      x-amazon-apigateway-integration:
        connectionId: "${vpc-id}"
        connectionType: "VPC_LINK"
        httpMethod: "POST"
        uri: "http://${url}/dreamers/{id}/kyc"
        requestParameters:
          integration.request.path.id: "method.request.path.id"
        passthroughBehavior: "when_no_match"
        timeoutInMillis: 29000
        type: "http_proxy"
  /v1/dreamers/{id}/additional_details:
    post:
      operationId: apileadsadditionaldetailspost
      responses: { }
      parameters:
        - name: "id"
          in: "path"
          required: true
      x-amazon-apigateway-integration:
        connectionId: "${vpc-id}"
        connectionType: "VPC_LINK"
        httpMethod: "POST"
        uri: "http://${url}/dreamers/{id}/additional_details"
        requestParameters:
          integration.request.path.id: "method.request.path.id"
        passthroughBehavior: "when_no_match"
        timeoutInMillis: 29000
        type: "http_proxy"
  /v1/dreamers/{id}/payment_details:
    post:
      operationId: apileadspaymentdetailspost
      responses: { }
      parameters:
        - name: "id"
          in: "path"
          required: true
      x-amazon-apigateway-integration:
        connectionId: "${vpc-id}"
        connectionType: "VPC_LINK"
        httpMethod: "POST"
        uri: "http://${url}/dreamers/{id}/payment_details"
        requestParameters:
          integration.request.path.id: "method.request.path.id"
        passthroughBehavior: "when_no_match"
        timeoutInMillis: 29000
        type: "http_proxy"
  /v1/dreamers/{id}:
    get:
      operationId: apileadsgetbyid
      responses: { }
      parameters:
        - name: "id"
          in: "path"
          required: true
      x-amazon-apigateway-integration:
        connectionId: "${vpc-id}"
        connectionType: "VPC_LINK"
        httpMethod: "GET"
        uri: "http://${url}/dreamers/{id}"
        requestParameters:
          integration.request.path.id: "method.request.path.id"
        passthroughBehavior: "when_no_match"
        timeoutInMillis: 29000
        type: "http_proxy"
  /v1/shufti/callback:
    post:
      operationId: apishufticallbackpost
      responses: { }
      x-amazon-apigateway-integration:
        connectionId: "${vpc-id}"
        connectionType: "VPC_LINK"
        httpMethod: "POST"
        uri: "http://${url}/shufti/callback"
        passthroughBehavior: "when_no_match"
        timeoutInMillis: 29000
        type: "http_proxy"
  /v1/sendpulse/updateApplicationStatus:
    post:
      operationId: apitoupdateapprovalstatus
      responses: { }
      x-amazon-apigateway-integration:
        connectionId: "${vpc-id}"
        connectionType: "VPC_LINK"
        httpMethod: "POST"
        uri: "http://${url}/sendpulse/updateApplicationStatus"
        passthroughBehavior: "when_no_match"
        timeoutInMillis: 29000
        type: "http_proxy"
  /v1/sendpulse/calculator:
    post:
      operationId: apisenpulsecalculatorpost
      responses: { }
      x-amazon-apigateway-integration:
        connectionId: "${vpc-id}"
        connectionType: "VPC_LINK"
        httpMethod: "POST"
        uri: "http://${url}/sendpulse/calculator"
        passthroughBehavior: "when_no_match"
        timeoutInMillis: 29000
        type: "http_proxy"
  /v1/sendpulse/calculator/loan:
    post:
      operationId: apisenpulsecalculatorloanpost
      responses: { }
      x-amazon-apigateway-integration:
        connectionId: "${vpc-id}"
        connectionType: "VPC_LINK"
        httpMethod: "POST"
        uri: "http://${url}/sendpulse/calculator/loan"
        passthroughBehavior: "when_no_match"
        timeoutInMillis: 29000
        type: "http_proxy"
  /v1/sendpulse/calculator/getTenureOptionsMessage:
    post:
      operationId: apitogettenureoptions
      responses: { }
      x-amazon-apigateway-integration:
        connectionId: "${vpc-id}"
        connectionType: "VPC_LINK"
        httpMethod: "POST"
        uri: "http://${url}/sendpulse/calculator/getTenureOptionsMessage"
        passthroughBehavior: "when_no_match"
        timeoutInMillis: 29000
        type: "http_proxy"
  /v1/sendpulse/convertToRomanNumber/{id}:
    get:
      operationId: romannumberconveter
      responses: { }
      parameters:
        - name: "id"
          in: "path"
          required: true
      x-amazon-apigateway-integration:
        connectionId: "${vpc-id}"
        connectionType: "VPC_LINK"
        httpMethod: "GET"
        uri: "http://${url}/sendpulse/convertToRomanNumber/{id}"
        requestParameters:
          integration.request.path.id: "method.request.path.id"
        passthroughBehavior: "when_no_match"
        timeoutInMillis: 29000
        type: "http_proxy"
  /v1/sendpulse/convertToKhmerNumber/{id}:
    get:
      operationId: khmernumberconveter
      responses: { }
      parameters:
        - name: "id"
          in: "path"
          required: true
      x-amazon-apigateway-integration:
        connectionId: "${vpc-id}"
        connectionType: "VPC_LINK"
        httpMethod: "GET"
        uri: "http://${url}/sendpulse/convertToKhmerNumber/{id}"
        requestParameters:
          integration.request.path.id: "method.request.path.id"
        passthroughBehavior: "when_no_match"
        timeoutInMillis: 29000
        type: "http_proxy"
  /v1/sendpulse/runFlowV1:
    post:
      operationId: runsendpulseflow
      responses: { }
      x-amazon-apigateway-integration:
        connectionId: "${vpc-id}"
        connectionType: "VPC_LINK"
        httpMethod: "POST"
        uri: "http://${url}/sendpulse/runFlowV1"
        passthroughBehavior: "when_no_match"
        timeoutInMillis: 29000
        type: "http_proxy"
  /v1/sendpulse/getRepaymentScheduleMessage:
    post:
      operationId: runsendpulseflow
      responses: { }
      x-amazon-apigateway-integration:
        connectionId: "${vpc-id}"
        connectionType: "VPC_LINK"
        httpMethod: "POST"
        uri: "http://${url}/sendpulse/getRepaymentScheduleMessage"
        passthroughBehavior: "when_no_match"
        timeoutInMillis: 29000
        type: "http_proxy"
  /v1/client:
    post:
      operationId: apiforlmsclients
      responses: { }
      x-amazon-apigateway-integration:
        connectionId: "${vpc-id}"
        connectionType: "VPC_LINK"
        httpMethod: "POST"
        uri: "http://${url}/client"
        passthroughBehavior: "when_no_match"
        timeoutInMillis: 29000
        type: "http_proxy"
  /v1/client/{id}:
    get:
      operationId: apigetclientbyid
      responses: { }
      parameters:
        - name: "id"
          in: "path"
          required: true
      x-amazon-apigateway-integration:
        connectionId: "${vpc-id}"
        connectionType: "VPC_LINK"
        httpMethod: "GET"
        uri: "http://${url}/client/{id}"
        requestParameters:
          integration.request.path.id: "method.request.path.id"
        passthroughBehavior: "when_no_match"
        timeoutInMillis: 29000
        type: "http_proxy"
  /v1/client/{id}/contracturl:
    get:
      operationId: createcontracturl
      responses: { }
      parameters:
        - name: "id"
          in: "path"
          required: true
      x-amazon-apigateway-integration:
        connectionId: "${vpc-id}"
        connectionType: "VPC_LINK"
        httpMethod: "GET"
        uri: "http://${url}/client/{id}/contracturl"
        requestParameters:
          integration.request.path.id: "method.request.path.id"
        passthroughBehavior: "when_no_match"
        timeoutInMillis: 29000
        type: "http_proxy"
  /v1/client/dreamPoint/refund:
    post:
      operationId: dreampointrefundapi
      responses: { }
      x-amazon-apigateway-integration:
        connectionId: "${vpc-id}"
        connectionType: "VPC_LINK"
        httpMethod: "POST"
        uri: "http://${url}/client/dreamPoint/refund"
        passthroughBehavior: "when_no_match"
        timeoutInMillis: 29000
        type: "http_proxy"
  /v1/client/dreamPoint/earn:
    post:
      operationId: dreampointearnapi
      responses: { }
      x-amazon-apigateway-integration:
        connectionId: "${vpc-id}"
        connectionType: "VPC_LINK"
        httpMethod: "POST"
        uri: "http://${url}/client/dreamPoint/earn"
        passthroughBehavior: "when_no_match"
        timeoutInMillis: 29000
        type: "http_proxy"
  /v1/loan:
    post:
      operationId: apiforclientloans
      responses: { }
      x-amazon-apigateway-integration:
        connectionId: "${vpc-id}"
        connectionType: "VPC_LINK"
        httpMethod: "POST"
        uri: "http://${url}/loan"
        passthroughBehavior: "when_no_match"
        timeoutInMillis: 29000
        type: "http_proxy"
  /v1/loan/{id}:
    get:
      operationId: apigetloanbyid
      responses: { }
      parameters:
        - name: "id"
          in: "path"
          required: true
      x-amazon-apigateway-integration:
        connectionId: "${vpc-id}"
        connectionType: "VPC_LINK"
        httpMethod: "GET"
        uri: "http://${url}/loan/{id}"
        requestParameters:
          integration.request.path.id: "method.request.path.id"
        passthroughBehavior: "when_no_match"
        timeoutInMillis: 29000
        type: "http_proxy"
  /v1/loan/disbursed:
    post:
      operationId: apitodisburseloan
      responses: { }
      x-amazon-apigateway-integration:
        connectionId: "${vpc-id}"
        connectionType: "VPC_LINK"
        httpMethod: "POST"
        uri: "http://${url}/loan/disbursed"
        passthroughBehavior: "when_no_match"
        timeoutInMillis: 29000
        type: "http_proxy"
  /v1/loan/status:
    post:
      operationId: apitoupdateloanstatus
      responses: { }
      x-amazon-apigateway-integration:
        connectionId: "${vpc-id}"
        connectionType: "VPC_LINK"
        httpMethod: "POST"
        uri: "http://${url}/loan/status"
        passthroughBehavior: "when_no_match"
        timeoutInMillis: 29000
        type: "http_proxy"
  /v1/loan/videoReceivedCallback:
    post:
      operationId: videoreceivecallackfromsendpulse
      responses: { }
      x-amazon-apigateway-integration:
        connectionId: "${vpc-id}"
        connectionType: "VPC_LINK"
        httpMethod: "POST"
        uri: "http://${url}/loan/videoReceivedCallback"
        passthroughBehavior: "when_no_match"
        timeoutInMillis: 29000
        type: "http_proxy"  
  /v1/loan/repayment/transaction/create:
    post:
      operationId: loanrepaymentapi
      responses: { }
      x-amazon-apigateway-integration:
        connectionId: "${vpc-id}"
        connectionType: "VPC_LINK"
        httpMethod: "POST"
        uri: "http://${url}/loan/repayment/transaction/create"
        passthroughBehavior: "when_no_match"
        timeoutInMillis: 29000
        type: "http_proxy"
  /v1/loan/runCronApis/{id}:
    get:
      operationId: apitoruncron
      responses: { }
      parameters:
        - name: "id"
          in: "path"
          required: true
      x-amazon-apigateway-integration:
        connectionId: "${vpc-id}"
        connectionType: "VPC_LINK"
        httpMethod: "GET"
        uri: "http://${url}/loan/runCronApis/{id}"
        requestParameters:
          integration.request.path.id: "method.request.path.id"
        passthroughBehavior: "when_no_match"
        timeoutInMillis: 29000
        type: "http_proxy"
  /v1/loan/runHandlePaymentDueLoansCron:
   post:
      operationId: loanrepaymentapi
      responses: { }
      x-amazon-apigateway-integration:
        connectionId: "${vpc-id}"
        connectionType: "VPC_LINK"
        httpMethod: "POST"
        uri: "http://${url}/loan/runHandlePaymentDueLoansCron"
        passthroughBehavior: "when_no_match"
        timeoutInMillis: 29000
        type: "http_proxy"
  /v1/repaymentSchedule/updateRepaymentDate:
   post:
      operationId: instalmentrepaymentdateupdation
      responses: { }
      x-amazon-apigateway-integration:
        connectionId: "${vpc-id}"
        connectionType: "VPC_LINK"
        httpMethod: "POST"
        uri: "http://${url}/repaymentSchedule/updateRepaymentDate"
        passthroughBehavior: "when_no_match"
        timeoutInMillis: 29000
        type: "http_proxy"
  /v1/files/uploadPaymentReceipt:
    post:
      operationId: paymentfileupload
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: base64
      responses: { }
      x-amazon-apigateway-integration:
        connectionId: "${vpc-id}"
        connectionType: "VPC_LINK"
        httpMethod: "POST"
        uri: "http://${url}/files/uploadPaymentReceipt"
        passthroughBehavior: "when_no_match"
        timeoutInMillis: 29000
        type: "http_proxy"
  /v1/repayment/process:
   post:
      operationId: processrepaymentrequest
      responses: { }
      x-amazon-apigateway-integration:
        connectionId: "${vpc-id}"
        connectionType: "VPC_LINK"
        httpMethod: "POST"
        uri: "http://${url}/repayment/process"
        passthroughBehavior: "when_no_match"
        timeoutInMillis: 29000
        type: "http_proxy"
  /v1/repaymentSchedule/get/instalment:
   post:
      operationId: apitogetinstalment
      responses: { }
      x-amazon-apigateway-integration:
        connectionId: "${vpc-id}"
        connectionType: "VPC_LINK"
        httpMethod: "POST"
        uri: "http://${url}/repaymentSchedule/get/instalment"
        passthroughBehavior: "when_no_match"
        timeoutInMillis: 29000
        type: "http_proxy"
  /v1/repaymentSchedule/{loan_id}/paymentPlanMsg:
    get:
      operationId: apitogetpaymentplanmessage
      responses: { }
      parameters:
        - name: "loan_id"
          in: "path"
          required: true
      x-amazon-apigateway-integration:
        connectionId: "${vpc-id}"
        connectionType: "VPC_LINK"
        httpMethod: "GET"
        uri: "http://${url}/repaymentSchedule/{loan_id}/paymentPlanMsg"
        requestParameters:
          integration.request.path.loan_id: "method.request.path.loan_id"
        passthroughBehavior: "when_no_match"
        timeoutInMillis: 29000
        type: "http_proxy"
  /v1/zoho/tasks/{dreamer_id}/create_ticket:
    post:
      operationId: apitocreategenerictask
      responses: { }
      parameters:
        - name: "dreamer_id"
          in: "path"
          required: true
      x-amazon-apigateway-integration:
        connectionId: "${vpc-id}"
        connectionType: "VPC_LINK"
        httpMethod: "POST"
        uri: "http://${url}/zoho/tasks/{dreamer_id}/create_ticket"
        requestParameters:
          integration.request.path.dreamer_id: "method.request.path.dreamer_id"
        passthroughBehavior: "when_no_match"
        timeoutInMillis: 29000
        type: "http_proxy"
  /v1/global/CalculateWingWeiLuyTransferFee/{amount}:
    get:
      operationId: apitocalculatetransferfee
      responses: { }
      parameters:
        - name: "amount"
          in: "path"
          required: true
      x-amazon-apigateway-integration:
        connectionId: "${vpc-id}"
        connectionType: "VPC_LINK"
        httpMethod: "GET"
        uri: "http://${url}/global/CalculateWingWeiLuyTransferFee/{amount}"
        requestParameters:
          integration.request.path.amount: "method.request.path.amount"
        passthroughBehavior: "when_no_match"
        timeoutInMillis: 29000
        type: "http_proxy"
  /v1/telegram/sendCreditAmountKeyboard:
   post:
      operationId: sendtelegramkeyboardcreditrequest
      responses: { }
      x-amazon-apigateway-integration:
        connectionId: "${vpc-id}"
        connectionType: "VPC_LINK"
        httpMethod: "POST"
        uri: "http://${url}/telegram/sendCreditAmountKeyboard"
        passthroughBehavior: "when_no_match"
        timeoutInMillis: 29000
        type: "http_proxy"
  /v1/telegram/removeTelegramKeyboard:
   post:
      operationId: removetelegramkeyboard
      responses: { }
      x-amazon-apigateway-integration:
        connectionId: "${vpc-id}"
        connectionType: "VPC_LINK"
        httpMethod: "POST"
        uri: "http://${url}/telegram/removeTelegramKeyboard"
        passthroughBehavior: "when_no_match"
        timeoutInMillis: 29000
        type: "http_proxy"
  /v1/telegram/sendDreampointsOptionKeyboard:
   post:
      operationId: sendDreampointsOptionKeyboard
      responses: { }
      x-amazon-apigateway-integration:
        connectionId: "${vpc-id}"
        connectionType: "VPC_LINK"
        httpMethod: "POST"
        uri: "http://${url}/telegram/sendDreampointsOptionKeyboard"
        passthroughBehavior: "when_no_match"
        timeoutInMillis: 29000
        type: "http_proxy"
  /v1/telegram/sendSelectTenureKeyboard:
   post:
      operationId: sendSelectTenureKeyboard
      responses: { }
      x-amazon-apigateway-integration:
        connectionId: "${vpc-id}"
        connectionType: "VPC_LINK"
        httpMethod: "POST"
        uri: "http://${url}/telegram/sendSelectTenureKeyboard"
        passthroughBehavior: "when_no_match"
        timeoutInMillis: 29000
        type: "http_proxy"
  /v1/telegram/sendCustomKeyboardMessage:
   post:
      operationId: sendCustomKeyboardMessageapi
      responses: { }
      x-amazon-apigateway-integration:
        connectionId: "${vpc-id}"
        connectionType: "VPC_LINK"
        httpMethod: "POST"
        uri: "http://${url}/telegram/sendCustomKeyboardMessage"
        passthroughBehavior: "when_no_match"
        timeoutInMillis: 29000
        type: "http_proxy"
components:
  schemas:
    Empty:
      title: "Empty Schema"
      type: "object"
