openapi: 3.0.1
info:
  description: "API gateway for Customer App"
  version: "2021-04-14T17:00:39Z"
  title: "auth-service-gateway"
paths:
  /v1/graphql:
    post:
      operationId: apigraphqlpost
      responses: { }
      x-amazon-apigateway-integration:
        connectionId: "${vpc-id}"
        connectionType: "VPC_LINK"
        httpMethod: "POST"
        uri: "http://${url}/hasura/v1/graphql"
        passthroughBehavior: "when_no_match"
        timeoutInMillis: 29000
        type: "http_proxy"
    options:
      operationId: mainuioptions
      responses:
        "200":
          description: "200 response"
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: "string"
            Access-Control-Allow-Methods:
              schema:
                type: "string"
            Access-Control-Allow-Headers:
              schema:
                type: "string"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Empty"
      x-amazon-apigateway-integration:
        type: "mock"
        responses:
          default:
            statusCode: "200"
            responseParameters:
              method.response.header.Access-Control-Allow-Methods: "'GET,OPTIONS'"
              method.response.header.Access-Control-Allow-Headers: "'*'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
        requestTemplates:
          application/json: "{\"statusCode\": 200}"
        passthroughBehavior: "when_no_match"
  /main/graphiql:
    get:
      operationId: mainuiget
      responses: { }
      x-amazon-apigateway-integration:
        connectionId: "${vpc-id}"
        connectionType: "VPC_LINK"
        httpMethod: "GET"
        uri: "http://${url}/main/graphiql"
        passthroughBehavior: "when_no_match"
        timeoutInMillis: 29000
        type: "http_proxy"
    post:
      operationId: mainuipost
      responses: { }
      x-amazon-apigateway-integration:
        connectionId: "${vpc-id}"
        connectionType: "VPC_LINK"
        httpMethod: "POST"
        uri: "http://${url}/main/graphiql"
        passthroughBehavior: "when_no_match"
        timeoutInMillis: 29000
        type: "http_proxy"
    options:
      operationId: mainuioptions
      responses:
        "200":
          description: "200 response"
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: "string"
            Access-Control-Allow-Methods:
              schema:
                type: "string"
            Access-Control-Allow-Headers:
              schema:
                type: "string"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Empty"
      x-amazon-apigateway-integration:
        type: "mock"
        responses:
          default:
            statusCode: "200"
            responseParameters:
              method.response.header.Access-Control-Allow-Methods: "'GET,OPTIONS'"
              method.response.header.Access-Control-Allow-Headers: "'*'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
        requestTemplates:
          application/json: "{\"statusCode\": 200}"
        passthroughBehavior: "when_no_match"
  /main/graphql:
    get:
      operationId: mainget
      responses: { }
      x-amazon-apigateway-integration:
        connectionId: "${vpc-id}"
        connectionType: "VPC_LINK"
        httpMethod: "GET"
        uri: "http://${url}/main/graphql"
        passthroughBehavior: "when_no_match"
        timeoutInMillis: 29000
        type: "http_proxy"
    post:
      operationId: mainpost
      responses: { }
      x-amazon-apigateway-integration:
        connectionId: "${vpc-id}"
        connectionType: "VPC_LINK"
        httpMethod: "POST"
        uri: "http://${url}/main/graphql"
        passthroughBehavior: "when_no_match"
        timeoutInMillis: 29000
        type: "http_proxy"
    options:
      operationId: mainoptions
      responses:
        "200":
          description: "200 response"
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: "string"
            Access-Control-Allow-Methods:
              schema:
                type: "string"
            Access-Control-Allow-Headers:
              schema:
                type: "string"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Empty"
      x-amazon-apigateway-integration:
        type: "mock"
        responses:
          default:
            statusCode: "200"
            responseParameters:
              method.response.header.Access-Control-Allow-Methods: "'GET,OPTIONS'"
              method.response.header.Access-Control-Allow-Headers: "'*'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
        requestTemplates:
          application/json: "{\"statusCode\": 200}"
        passthroughBehavior: "when_no_match"
components:
  schemas:
    Empty:
      title: "Empty Schema"
      type: "object"
